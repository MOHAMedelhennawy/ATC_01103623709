// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  name      String
  email     String       @unique
  password  String
  role      Role         @default(USER)
  createdAt DateTime     @default(now())

  // Relations
  bookings  Booking[]
}

model Category {
  id          String      @id @default(uuid())
  name        String      @unique
  createdAt   DateTime    @default(now())
  events      Event[]
}

model Event {
  id          String       @id @default(uuid())
  title       String
  description String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  date        DateTime
  address     String
  location     String
  venue       String
  price       Float
  imageUrl    String
  createdAt   DateTime     @default(now())

  // Relations
  bookings    Booking[]

  // indexes
  @@index([categoryId])
  @@index([date])

}

model Booking {
  id          String        @id @default(uuid())
  bookingDate DateTime      @default(now())
  status      BookingStatus @default(CONFIRMED)

  // Foreign Keys
  userId   String
  eventId  String
  user     User             @relation(fields: [userId], references: [id])
  event    Event            @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])

  // Indexes
  @@index([userId])
  @@index([eventId])

}

// Enum for user role
enum Role {
  ADMIN
  USER
}

// Enum for booking status
enum BookingStatus {
  CONFIRMED
  CANCELLED
}
